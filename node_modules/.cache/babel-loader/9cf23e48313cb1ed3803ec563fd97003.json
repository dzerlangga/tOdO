{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo\\\\src\\\\component\\\\List.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles\n  };\n};\n\nclass ConnectedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      berubah: false,\n      edit: null,\n      id: 1\n    };\n    this.onberubah = this.onberubah.bind(this);\n  }\n\n  onberubah(id, value) {\n    this.setState({\n      berubah: true,\n      id: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.articles.map(el => React.createElement(\"div\", {\n      key: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.id === el.id ? React.createElement(\"input\", {\n      value: el.title,\n      onClick: e => this.onberubah('id', e.target.key),\n      key: el.id,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : React.createElement(\"li\", {\n      onClick: e => this.onberubah('id', el.id),\n      value: el.id,\n      key: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, el.title))));\n  }\n\n}\n\n;\nconst List = connect(mapStateToProps)(ConnectedList);\nexport default List;","map":{"version":3,"sources":["D:\\todo\\src\\component\\List.js"],"names":["React","connect","mapStateToProps","state","articles","ConnectedList","Component","constructor","props","berubah","edit","id","onberubah","bind","value","setState","render","map","el","title","e","target","key","List"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AADb,GAAP;AAGH,CAJD;;AAOA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKL,KAAL,GAAa;AACTM,MAAAA,OAAO,EAAG,KADD;AAETC,MAAAA,IAAI,EAAG,IAFE;AAGTC,MAAAA,EAAE,EAAE;AAHK,KAAb;AAKA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDD,EAAAA,SAAS,CAACD,EAAD,EAAIG,KAAJ,EAAU;AACf,SAAKC,QAAL,CAAc;AACVN,MAAAA,OAAO,EAAG,IADA;AAEVE,MAAAA,EAAE,EAAEG;AAFM,KAAd;AAIH;;AAEDE,EAAAA,MAAM,GAAE;AAEJ,WACJ;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWJ,QAAX,CAAoBa,GAApB,CAAyBC,EAAE,IACpB;AAAK,MAAA,GAAG,EAAEA,EAAE,CAACP,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKR,KAAL,CAAWQ,EAAX,KAAkBO,EAAE,CAACP,EAArB,GAA0B;AAAO,MAAA,KAAK,EAAEO,EAAE,CAACC,KAAjB;AAAwB,MAAA,OAAO,EAAGC,CAAD,IAAO,KAAKR,SAAL,CAAe,IAAf,EAAqBQ,CAAC,CAACC,MAAF,CAASC,GAA9B,CAAxC;AAA4E,MAAA,GAAG,EAAEJ,EAAE,CAACP,EAApF;AAAwF,MAAA,SAAS,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,GAAuI;AAAI,MAAA,OAAO,EAAGS,CAAD,IAAO,KAAKR,SAAL,CAAe,IAAf,EAAqBM,EAAE,CAACP,EAAxB,CAApB;AAAiD,MAAA,KAAK,EAAEO,EAAE,CAACP,EAA3D;AAA+D,MAAA,GAAG,EAAEO,EAAE,CAACP,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4EO,EAAE,CAACC,KAA/E,CADxI,CADP,CADL,CADI;AAUH;;AA9BuC;;AA+B3C;AAED,MAAMI,IAAI,GAAGtB,OAAO,CAACC,eAAD,CAAP,CAAyBG,aAAzB,CAAb;AACA,eAAekB,IAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        articles: state.articles\r\n    };\r\n};\r\n\r\n\r\nclass ConnectedList extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            berubah : false,\r\n            edit : null,\r\n            id: 1,\r\n        }\r\n        this.onberubah = this.onberubah.bind(this);\r\n    }\r\n\r\n    onberubah(id,value){\r\n        this.setState({\r\n            berubah : true,\r\n            id: value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n    <div className=\"list-group list-group-flush\">\r\n        {this.props.articles.map( el => (\r\n                <div key={el.id}>\r\n                {this.state.id === el.id ? <input value={el.title} onClick={(e) => this.onberubah('id', e.target.key)} key={el.id} autoFocus></input> : <li onClick={(e) => this.onberubah('id', el.id)} value={el.id} key={el.id}>{el.title}</li>}\r\n                </div> \r\n        ))}\r\n    </div>\r\n    );\r\n\r\n    }\r\n};\r\n\r\nconst List = connect(mapStateToProps)(ConnectedList);\r\nexport default List;"]},"metadata":{},"sourceType":"module"}