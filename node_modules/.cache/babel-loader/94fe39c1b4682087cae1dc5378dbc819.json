{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo\\\\src\\\\component\\\\List.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RemoveTodo, UpdateTodo } from \"../action/index\";\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles\n  };\n};\n\nfunction mapDistpatchToProps(distpatch) {\n  return {\n    RemoveTodo: articles => distpatch(RemoveTodo(articles))\n  };\n}\n\nfunction mapUpdateToProps(distpatch) {\n  return {\n    UpdateTodo: articles => distpatch(UpdateTodo(articles))\n  };\n}\n\nclass ConnectedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      berubah: false,\n      id: 1,\n      edit: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id, value) {\n    var d = Object.assign({}, this.state.edit);\n    Object.assign(d, {\n      [id]: value\n    });\n    this.setState({\n      berubah: !this.state.berubah,\n      id: value\n    });\n    setTimeout(() => {\n      console.log(this.state);\n    }, 1500);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.articles.map((el, key) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.id === el.id && this.state.berubah ? React.createElement(\"input\", {\n      type: \"text\",\n      value: el.title,\n      onChange: e => // this.props.onUpdates(e.target.value, this.props.keys)\n      this.props.UpdateTodo({\n        value: el.title,\n        text: e.target.value,\n        type: 'IS_UPDATE'\n      }),\n      onKeyPress: e => {\n        if (e.key === 'Enter') {\n          // this.props.onUpdates(e.target.value, this.props.keys, true)\n          this.props.UpdateTodo({\n            type: 'SAVE'\n          });\n          this.setState({\n            berubah: !this.state.berubah\n          });\n        }\n      },\n      onBlur: () => {\n        // this.props.abort(this.props.data, this.props.keys)\n        this.props.UpdateTodo({\n          value: el.title,\n          type: 'IS_ABORT'\n        });\n        this.setState({\n          berubah: !this.state.berubah\n        });\n      },\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : React.createElement(\"li\", {\n      onDoubleClick: d => this.handleChange('id', d.target.value),\n      value: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, el.title, React.createElement(\"button\", {\n      onClick: e => this.props.RemoveTodo({\n        value: e.target.value\n      }),\n      value: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"hapus\")))));\n  }\n\n}\n\n;\nconst List = connect(mapStateToProps, mapDistpatchToProps, mapUpdateToProps)(ConnectedList);\nexport default List;","map":{"version":3,"sources":["D:\\todo\\src\\component\\List.js"],"names":["React","connect","RemoveTodo","UpdateTodo","mapStateToProps","state","articles","mapDistpatchToProps","distpatch","mapUpdateToProps","ConnectedList","Component","constructor","props","berubah","id","edit","handleChange","bind","value","d","Object","assign","setState","setTimeout","console","log","render","map","el","key","title","e","text","target","type","List"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RemoveTodo , UpdateTodo } from \"../action/index\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        articles: state.articles\r\n    };\r\n};\r\nfunction mapDistpatchToProps(distpatch) {\r\n    return{\r\n        RemoveTodo: articles => distpatch(RemoveTodo(articles))\r\n    }\r\n}\r\n\r\nfunction mapUpdateToProps(distpatch) {\r\n    return{\r\n        UpdateTodo: articles => distpatch(UpdateTodo(articles))\r\n    }\r\n}\r\nclass ConnectedList extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            berubah : false,\r\n            id: 1,\r\n            edit: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(id, value){\r\n        var d = Object.assign({}, this.state.edit)\r\n        Object.assign(d, { [id]: value })\r\n        this.setState({\r\n            berubah: !this.state.berubah,\r\n            id: value\r\n        });\r\n        setTimeout(() => {\r\n            console.log(this.state)\r\n        }, 1500)\r\n    }\r\n    render(){   \r\n        return (\r\n    <div className=\"list-group list-group-flush\">\r\n        {this.props.articles.map(( el, key) => (\r\n                <div>\r\n                {this.state.id === el.id && this.state.berubah ? \r\n                    (<input\r\n                        type=\"text\"\r\n                        value={el.title}\r\n                        onChange={e =>\r\n                            // this.props.onUpdates(e.target.value, this.props.keys)\r\n                            this.props.UpdateTodo({\r\n                                value: el.title,\r\n                                text: e.target.value,\r\n                                type: 'IS_UPDATE'\r\n                            })\r\n                        }\r\n                        onKeyPress={e => {\r\n                            if (e.key === 'Enter') {\r\n                                // this.props.onUpdates(e.target.value, this.props.keys, true)\r\n                                this.props.UpdateTodo({ type: 'SAVE' })\r\n                                this.setState({\r\n                                    berubah: !this.state.berubah\r\n                                })\r\n                            }\r\n                        }}\r\n                        onBlur={() => {\r\n                            // this.props.abort(this.props.data, this.props.keys)\r\n                            this.props.UpdateTodo({\r\n                                value: el.title,\r\n                                type: 'IS_ABORT'\r\n                            })\r\n                            this.setState({\r\n                                berubah: !this.state.berubah\r\n                            })\r\n                        }}\r\n                        autoFocus={true}\r\n                    />) \r\n                : \r\n                <li \r\n                onDoubleClick={(d) => this.handleChange('id', d.target.value)} \r\n                value={el.id}>{el.title}\r\n                        <button onClick={e => this.props.RemoveTodo({value : e.target.value})} value={key}>\r\n                            hapus\r\n                        </button>\r\n                </li>}\r\n                </div> \r\n        ))}\r\n    </div>\r\n    );\r\n    }\r\n};\r\n\r\nconst List = connect(mapStateToProps, mapDistpatchToProps, mapUpdateToProps)(ConnectedList);\r\nexport default List;"]},"metadata":{},"sourceType":"module"}