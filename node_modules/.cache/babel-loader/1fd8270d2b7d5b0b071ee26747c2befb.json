{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo\\\\src\\\\component\\\\List.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles\n  };\n};\n\nclass ConnectedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      berubah: false\n    };\n    this.onberubah = this.onberubah.bind(this);\n  }\n\n  onberubah() {\n    this.setState(prevState => ({\n      berubah: !prevState.berubah\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onDoubleClick: () => {\n        if (!this.state.berubah) {\n          this.setState({\n            berubah: !this.state.berubah\n          });\n          this.props.update({\n            value: this.props.keys\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.berubah ? React.createElement(\"input\", {\n      type: \"text\",\n      key: this.props.articles.id,\n      value: this.props.articles.title,\n      onChange: e => // this.props.onUpdates(e.target.value, this.props.keys)\n      this.props.update({\n        value: this.props.articles.id,\n        text: e.target.value,\n        type: 'IS_UPDATE'\n      }),\n      onKeyPress: e => {\n        if (e.key === 'Enter') {\n          // this.props.onUpdates(e.target.value, this.props.keys, true)\n          this.props.update({\n            type: 'SAVE'\n          });\n          this.setState({\n            berubah: !this.state.berubah\n          });\n        }\n      },\n      onBlur: () => {\n        // this.props.abort(this.props.data, this.props.keys)\n        this.props.update({\n          value: this.props.keys,\n          type: 'IS_ABORT'\n        });\n        this.setState({\n          berubah: !this.state.berubah\n        });\n      },\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : this.props.data, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: () => this.props.onChange({\n        value: this.props.keys\n      }),\n      checked: this.props.isCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nconst List = connect(mapStateToProps)(ConnectedList);\nexport default List;","map":{"version":3,"sources":["D:\\todo\\src\\component\\List.js"],"names":["React","connect","mapStateToProps","state","articles","ConnectedList","Component","constructor","props","berubah","onberubah","bind","setState","prevState","render","update","value","keys","id","title","e","text","target","type","key","data","onChange","isCheck","List"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        articles: state.articles\r\n    };\r\n};\r\n\r\n\r\nclass ConnectedList extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            berubah : false\r\n        }\r\n        this.onberubah = this.onberubah.bind(this);\r\n    }\r\n\r\n    onberubah(){\r\n        this.setState(prevState =>({\r\n            berubah : !prevState.berubah\r\n        }));\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n    <div className=\"list-group list-group-flush\">\r\n        {/* {this.props.articles.map( el => (\r\n                <div onClick={this.onberubah} className=\"list-group-item\" key={el.id}>\r\n                    {this.state.berubah ? <input value={el.title} autoFocus></input> : <li>{el.title}</li>}\r\n                </div> \r\n        ))} */}\r\n\r\n\r\n                <li\r\n                    onDoubleClick={() => {\r\n                        if (!this.state.berubah) {\r\n                            this.setState({\r\n                                berubah: !this.state.berubah\r\n                            })\r\n                            this.props.update({ value: this.props.keys })\r\n                        }\r\n                    }}\r\n                >\r\n                    {this.state.berubah ? (\r\n                        <input\r\n                            type=\"text\"\r\n                            key={this.props.articles.id}\r\n                            value={this.props.articles.title}\r\n                            onChange={e =>\r\n                                // this.props.onUpdates(e.target.value, this.props.keys)\r\n                                this.props.update({\r\n                                    value: this.props.articles.id,\r\n                                    text: e.target.value,\r\n                                    type: 'IS_UPDATE'\r\n                                })\r\n                            }\r\n                            onKeyPress={e => {\r\n                                if (e.key === 'Enter') {\r\n                                    // this.props.onUpdates(e.target.value, this.props.keys, true)\r\n                                    this.props.update({ type: 'SAVE' })\r\n                                    this.setState({\r\n                                        berubah: !this.state.berubah\r\n                                    })\r\n                                }\r\n                            }}\r\n                            onBlur={() => {\r\n                                // this.props.abort(this.props.data, this.props.keys)\r\n                                this.props.update({\r\n                                    value: this.props.keys,\r\n                                    type: 'IS_ABORT'\r\n                                })\r\n                                this.setState({\r\n                                    berubah: !this.state.berubah\r\n                                })\r\n                            }}\r\n                            autoFocus={true}\r\n                        />\r\n                    ) : (\r\n                            this.props.data\r\n                        )}\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={() => this.props.onChange({ value: this.props.keys })}\r\n                        checked={this.props.isCheck}\r\n                    />\r\n                </li>\r\n    </div>\r\n    );\r\n\r\n    }\r\n};\r\n\r\nconst List = connect(mapStateToProps)(ConnectedList);\r\nexport default List;"]},"metadata":{},"sourceType":"module"}