{"ast":null,"code":"import _objectSpread from \"D:\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD_ARTICLE, TODO_REMOVE, TODO_UPDATE } from \"../constant/type\";\nconst initialState = {\n  articles: [],\n  remoteArticles: []\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ARTICLE) {\n    return Object.assign({}, state, {\n      articles: state.articles.concat(action.payload)\n    });\n  } else if (action.type === \"DATA_LOADED\") {\n    return Object.assign({}, state, {\n      remoteArticles: state.remoteArticles.concat(action.payload)\n    });\n  } else if (action.type === TODO_REMOVE) {\n    let newData = state.articles.slice();\n    let index = parseInt(action.payload.value);\n\n    if (!newData[index]) {\n      return state;\n    }\n\n    newData.splice(index, 1);\n    return _objectSpread({}, state, {\n      articles: newData\n    });\n  } else if (action.type === TODO_UPDATE) {\n    if (action.payload === {}) {\n      return state;\n    }\n\n    if (action.payload.type === 'ON_EDIT') {\n      let newTODO = state.articles.slice();\n      let ind = parseInt(action.payload.value);\n\n      if (!newTODO[ind]) {\n        return state;\n      }\n\n      return _objectSpread({}, state, {\n        tempItemText: newTODO[ind].value\n      });\n    } else if (action.payload.type === 'IS_UPDATE') {\n      //   let newTODO = state.articles.slice()\n      //   let ind = parseInt(action.payload.value)\n      //   if (!newTODO[ind]) {\n      //       return state\n      //   }\n      //   newTODO[ind].value = action.payload.text\n      //   return {\n      //       ...state,\n      //       articles: newTODO\n      //   }\n      console.log('del');\n    } else if (action.payload.type === 'IS_ABORT') {\n      let newTODO = state.articles.slice();\n      let ind = parseInt(action.payload.value);\n\n      if (!newTODO[ind]) {\n        return state;\n      }\n\n      newTODO[ind].value = state.tempItemText;\n      return _objectSpread({}, state, {\n        tempItemText: '',\n        articles: newTODO\n      });\n    } else if (action.payload.type === 'SAVE') {\n      return _objectSpread({}, state, {\n        tempItemText: ''\n      });\n    }\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["D:\\todo\\src\\reducers\\index.js"],"names":["ADD_ARTICLE","TODO_REMOVE","TODO_UPDATE","initialState","articles","remoteArticles","rootReducer","state","action","type","Object","assign","concat","payload","newData","slice","index","parseInt","value","splice","newTODO","ind","tempItemText","console","log"],"mappings":"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","sourcesContent":[" import { ADD_ARTICLE, TODO_REMOVE, TODO_UPDATE } from \"../constant/type\";\r\n\r\nconst initialState = {\r\n    articles: [],\r\n    remoteArticles: []\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    if (action.type === ADD_ARTICLE) {\r\n        return Object.assign({}, state, {\r\n            articles: state.articles.concat(action.payload)\r\n        });\r\n    } \r\n\r\n    else if (action.type === \"DATA_LOADED\") {\r\n        return Object.assign({}, state, {\r\n          remoteArticles: state.remoteArticles.concat(action.payload)\r\n        });\r\n      }\r\n\r\n      else if (action.type === TODO_REMOVE) {\r\n          let newData = state.articles.slice()\r\n          let index = parseInt(action.payload.value)\r\n          if (!newData[index]) {\r\n              return state\r\n          }\r\n          newData.splice(index, 1)\r\n          return {\r\n              ...state,\r\n              articles: newData\r\n          }\r\n      }\r\n\r\n      else if (action.type === TODO_UPDATE) {\r\n          if (action.payload === {}) {\r\n              return state\r\n          }\r\n          if (action.payload.type === 'ON_EDIT') {\r\n              let newTODO = state.articles.slice()\r\n              let ind = parseInt(action.payload.value)\r\n              if (!newTODO[ind]) {\r\n                  return state\r\n              }\r\n              return {\r\n                  ...state,\r\n                  tempItemText: newTODO[ind].value\r\n              }\r\n          }\r\n\r\n          else if (action.payload.type === 'IS_UPDATE') {\r\n            //   let newTODO = state.articles.slice()\r\n            //   let ind = parseInt(action.payload.value)\r\n            //   if (!newTODO[ind]) {\r\n            //       return state\r\n            //   }\r\n            //   newTODO[ind].value = action.payload.text\r\n            //   return {\r\n            //       ...state,\r\n            //       articles: newTODO\r\n            //   }\r\n            console.log('del')\r\n          }\r\n\r\n          else if (action.payload.type === 'IS_ABORT') {\r\n              let newTODO = state.articles.slice()\r\n                let ind = parseInt(action.payload.value)\r\n              if (!newTODO[ind]) {\r\n                  return state\r\n              }\r\n              newTODO[ind].value = state.tempItemText\r\n              return {\r\n                  ...state,\r\n                  tempItemText: '',\r\n                  articles: newTODO\r\n              }\r\n          }\r\n\r\n          else if (action.payload.type === 'SAVE') {\r\n              return {\r\n                  ...state,\r\n                  tempItemText: ''\r\n              }\r\n    }\r\n}\r\n\r\n      return state;\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}