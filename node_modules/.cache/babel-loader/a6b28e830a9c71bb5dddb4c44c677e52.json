{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo\\\\src\\\\component\\\\List.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles\n  };\n};\n\nconst RoomContext = React.createContext(); // A component whose sole job is to manage\n// the state of the Room\n\nclass RoomStore extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLit: false\n    };\n\n    this.toggleLight = () => {\n      this.setState(state => ({\n        isLit: !state.isLit\n      }));\n    };\n  }\n\n  render() {\n    // Pass down the state and the onToggleLight action\n    return React.createElement(RoomContext.Provider, {\n      value: {\n        isLit: this.state.isLit,\n        onToggleLight: this.toggleLight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ConnectedList = ({\n  articles\n}) => React.createElement(RoomContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, ({\n  isLit,\n  onToggleLight\n}) => React.createElement(\"div\", {\n  className: \"room \".concat(isLit ? \"lit\" : \"dark\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"The room is \", isLit ? \"lit\" : \"dark\", \".\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), isLit ? React.createElement(\"input\", {\n  onClick: onToggleLight,\n  autoFocus: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}) : React.createElement(\"button\", {\n  onClick: onToggleLight,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"input\")));\n\nconst List = connect(mapStateToProps)(ConnectedList);\nexport default List;","map":{"version":3,"sources":["D:\\todo\\src\\component\\List.js"],"names":["React","connect","mapStateToProps","state","articles","RoomContext","createContext","RoomStore","Component","isLit","toggleLight","setState","render","onToggleLight","props","children","ConnectedList","List"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAEC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAAlB,GAAP;AACH,CAFD;;AAIA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB,C,CAEA;AACA;;AACA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCL,KADoC,GAC5B;AACJM,MAAAA,KAAK,EAAE;AADH,KAD4B;;AAAA,SAKpCC,WALoC,GAKtB,MAAM;AAChB,WAAKC,QAAL,CAAcR,KAAK,KAAK;AAAEM,QAAAA,KAAK,EAAE,CAACN,KAAK,CAACM;AAAhB,OAAL,CAAnB;AACH,KAPmC;AAAA;;AASpCG,EAAAA,MAAM,GAAG;AACL;AACA,WACI,oBAAC,WAAD,CAAa,QAAb;AACI,MAAA,KAAK,EAAE;AACHH,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KADf;AAEHI,QAAAA,aAAa,EAAE,KAAKH;AAFjB,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKI,KAAL,CAAWC,QANhB,CADJ;AAUH;;AArBmC;;AAyBxC,MAAMC,aAAa,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KAClB,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAAC;AAAEK,EAAAA,KAAF;AAASI,EAAAA;AAAT,CAAD,KACG;AAAK,EAAA,SAAS,iBAAUJ,KAAK,GAAG,KAAH,GAAW,MAA1B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBA,KAAK,GAAG,KAAH,GAAW,MADjC,OAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFI,EAGKA,KAAK,GACF;AAAO,EAAA,OAAO,EAAEI,aAAhB;AAA+B,EAAA,SAAS,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADE,GAGE;AAAQ,EAAA,OAAO,EAAEA,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANZ,CAFR,CADJ;;AAkBA,MAAMI,IAAI,GAAGhB,OAAO,CAACC,eAAD,CAAP,CAAyBc,aAAzB,CAAb;AACA,eAAeC,IAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { articles: state.articles};\r\n};\r\n\r\nconst RoomContext = React.createContext();\r\n\r\n// A component whose sole job is to manage\r\n// the state of the Room\r\nclass RoomStore extends React.Component {\r\n    state = {\r\n        isLit: false\r\n    };\r\n\r\n    toggleLight = () => {\r\n        this.setState(state => ({ isLit: !state.isLit }));\r\n    };\r\n\r\n    render() {\r\n        // Pass down the state and the onToggleLight action\r\n        return (\r\n            <RoomContext.Provider\r\n                value={{\r\n                    isLit: this.state.isLit,\r\n                    onToggleLight: this.toggleLight\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </RoomContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst ConnectedList = ({ articles }) => (\r\n    <RoomContext.Consumer>\r\n        {({ isLit, onToggleLight }) => (\r\n            <div className={`room ${isLit ? \"lit\" : \"dark\"}`}>\r\n                The room is {isLit ? \"lit\" : \"dark\"}.\r\n        <br />\r\n                {isLit ? (\r\n                    <input onClick={onToggleLight} autoFocus />\r\n                ) : (\r\n                        <button onClick={onToggleLight}>input</button>\r\n                    )}\r\n            </div>\r\n        )}\r\n    </RoomContext.Consumer>\r\n  \r\n);\r\n\r\n\r\nconst List = connect(mapStateToProps)(ConnectedList);\r\nexport default List;"]},"metadata":{},"sourceType":"module"}