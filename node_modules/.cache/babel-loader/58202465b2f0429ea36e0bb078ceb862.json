{"ast":null,"code":"import { ADD_ARTICLE, TODO_REMOVE, TODO_UPDATE } from \"../constant/type\";\nexport function getData() {\n  return function (dispatch) {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => {\n      dispatch({\n        type: \"DATA_LOADED\",\n        payload: json\n      });\n    });\n  };\n}\nexport function RemoveTodo(payload) {\n  return {\n    type: TODO_REMOVE,\n    payload\n  };\n}\nexport function UpdateTodo(payload) {\n  const type = 'type' in payload;\n\n  if (!type) {\n    Object.assign(payload, {\n      type: 'ON_EDIT'\n    });\n  }\n\n  return {\n    type: TODO_TYPES.TODO_UPDATE,\n    payload\n  };\n}\nexport function addArticle(payload) {\n  return {\n    type: ADD_ARTICLE,\n    payload\n  };\n}\n;","map":{"version":3,"sources":["D:\\todo\\src\\action\\index.js"],"names":["ADD_ARTICLE","TODO_REMOVE","TODO_UPDATE","getData","dispatch","fetch","then","response","json","type","payload","RemoveTodo","UpdateTodo","Object","assign","TODO_TYPES","addArticle"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,WAArB,EAAkCC,WAAlC,QAAsD,kBAAtD;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAASC,QAAT,EAAmB;AACxB,WAAOC,KAAK,CAAC,4CAAD,CAAL,CACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECE,IAAI,IAAI;AACZJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAEF;AAAhC,OAAD,CAAR;AACD,KAJI,CAAP;AAKD,GAND;AAOC;AAEH,OAAO,SAASG,UAAT,CAAoBD,OAApB,EAA4B;AACjC,SAAO;AAAED,IAAAA,IAAI,EAAER,WAAR;AAAsBS,IAAAA;AAAtB,GAAP;AACD;AAED,OAAO,SAASE,UAAT,CAAoBF,OAApB,EAA6B;AAClC,QAAMD,IAAI,GAAG,UAAUC,OAAvB;;AACA,MAAI,CAACD,IAAL,EAAW;AACTI,IAAAA,MAAM,CAACC,MAAP,CAAcJ,OAAd,EAAuB;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAvB;AACD;;AACD,SAAO;AACLA,IAAAA,IAAI,EAAEM,UAAU,CAACb,WADZ;AAELQ,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASM,UAAT,CAAoBN,OAApB,EAA6B;AAChC,SAAO;AAAED,IAAAA,IAAI,EAACT,WAAP;AAAoBU,IAAAA;AAApB,GAAP;AACH;AAAA","sourcesContent":["import { ADD_ARTICLE,TODO_REMOVE, TODO_UPDATE  } from \"../constant/type\";\r\n\r\nexport function getData() {\r\n  return function(dispatch) {\r\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        dispatch({ type: \"DATA_LOADED\", payload: json });\r\n      });\r\n  };\r\n  }\r\n\r\nexport function RemoveTodo(payload){\r\n  return { type: TODO_REMOVE , payload}\r\n}\r\n\r\nexport function UpdateTodo(payload) {\r\n  const type = 'type' in payload\r\n  if (!type) {\r\n    Object.assign(payload, { type: 'ON_EDIT' })\r\n  }\r\n  return {\r\n    type: TODO_TYPES.TODO_UPDATE,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function addArticle(payload) {\r\n    return { type:ADD_ARTICLE, payload }\r\n};"]},"metadata":{},"sourceType":"module"}