{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo\\\\src\\\\component\\\\List.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RemoveTodo, UpdateTodo } from \"../action/index\";\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles\n  };\n};\n\nfunction mapDistpatchToProps(distpatch) {\n  return {\n    RemoveTodo: articles => distpatch(RemoveTodo(articles)),\n    UpdateTodo: articles => distpatch(UpdateTodo(articles))\n  };\n}\n\nclass ConnectedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      berubah: false,\n      id: 1,\n      edit: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  } // handleChange(id, value){\n  //     var d = Object.assign({}, this.state.edit)\n  //     Object.assign(d, { [id]: value })\n  //     this.setState({\n  //         berubah: !this.state.berubah,\n  //         id: value\n  //     });\n  //     setTimeout(() => {\n  //         console.log(this.state)\n  //     }, 1500)\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.articles.map((el, key) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.id === el.id && this.state.berubah ? React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: e.title,\n      onChange: e => // this.props.onUpdates(e.target.value, this.props.keys)\n      this.props.UpdateTodo({\n        value: el.title,\n        text: e.target.value,\n        type: 'IS_UPDATE'\n      }),\n      onKeyPress: e => {\n        if (e.key === 'Enter') {\n          // this.props.onUpdates(e.target.value, this.props.keys, true)\n          this.props.UpdateTodo({\n            type: 'SAVE'\n          });\n          this.setState({\n            berubah: !this.state.berubah\n          });\n        }\n      },\n      onBlur: () => {\n        // this.props.abort(this.props.data, this.props.keys)\n        this.props.UpdateTodo({\n          value: el.title,\n          type: 'IS_ABORT'\n        });\n        this.setState({\n          berubah: !this.state.berubah\n        });\n      },\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) : React.createElement(\"li\", {\n      onDoubleClick: d => this.handleChange('id', d.target.value),\n      value: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, el.title, React.createElement(\"button\", {\n      onClick: e => this.props.RemoveTodo({\n        value: e.target.value\n      }),\n      value: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"hapus\")))));\n  }\n\n}\n\n;\nconst List = connect(mapStateToProps, mapDistpatchToProps)(ConnectedList);\nexport default List;","map":{"version":3,"sources":["D:\\todo\\src\\component\\List.js"],"names":["React","connect","RemoveTodo","UpdateTodo","mapStateToProps","state","articles","mapDistpatchToProps","distpatch","ConnectedList","Component","constructor","props","berubah","id","edit","handleChange","bind","render","map","el","key","e","title","value","text","target","type","setState","d","List"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RemoveTodo , UpdateTodo } from \"../action/index\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        articles: state.articles\r\n    };\r\n};\r\nfunction mapDistpatchToProps(distpatch) {\r\n    return{\r\n        RemoveTodo: articles => distpatch(RemoveTodo(articles)),\r\n        UpdateTodo: articles => distpatch(UpdateTodo(articles))\r\n    }\r\n}\r\n\r\nclass ConnectedList extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            berubah : false,\r\n            id: 1,\r\n            edit: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    // handleChange(id, value){\r\n    //     var d = Object.assign({}, this.state.edit)\r\n    //     Object.assign(d, { [id]: value })\r\n    //     this.setState({\r\n    //         berubah: !this.state.berubah,\r\n    //         id: value\r\n    //     });\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state)\r\n    //     }, 1500)\r\n    // }\r\n    render(){   \r\n        return (\r\n    <div className=\"list-group list-group-flush\">\r\n        {this.props.articles.map(( el, key) => (\r\n                <div>\r\n                {this.state.id === el.id && this.state.berubah ? \r\n                    (<input\r\n                        type=\"text\"\r\n                        placeholder={e.title}\r\n                        onChange={e =>\r\n                            // this.props.onUpdates(e.target.value, this.props.keys)\r\n                            this.props.UpdateTodo({\r\n                                value: el.title,\r\n                                text: e.target.value,\r\n                                type: 'IS_UPDATE'\r\n                            })\r\n                        }\r\n                        onKeyPress={e => {\r\n                            if (e.key === 'Enter') {\r\n                                // this.props.onUpdates(e.target.value, this.props.keys, true)\r\n                                this.props.UpdateTodo({ type: 'SAVE' })\r\n                                this.setState({\r\n                                    berubah: !this.state.berubah\r\n                                })\r\n                            }\r\n                        }}\r\n                        onBlur={() => {\r\n                            // this.props.abort(this.props.data, this.props.keys)\r\n                            this.props.UpdateTodo({\r\n                                value: el.title,\r\n                                type: 'IS_ABORT'\r\n                            })\r\n                            this.setState({\r\n                                berubah: !this.state.berubah\r\n                            })\r\n                        }}\r\n                        autoFocus={true}\r\n                    />) \r\n                : \r\n                (<li \r\n                onDoubleClick={(d) => this.handleChange('id', d.target.value)} \r\n                value={el.id}>{el.title}\r\n                        <button onClick={e => this.props.RemoveTodo({value : e.target.value})} value={key}>\r\n                            hapus\r\n                        </button>\r\n                </li>)}\r\n                </div> \r\n        ))}\r\n    </div>\r\n    );\r\n    }\r\n};\r\n\r\nconst List = connect(mapStateToProps, mapDistpatchToProps)(ConnectedList);\r\nexport default List;"]},"metadata":{},"sourceType":"module"}